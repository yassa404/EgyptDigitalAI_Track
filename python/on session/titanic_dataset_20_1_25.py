# -*- coding: utf-8 -*-
"""titanic dataset 20/1/25.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SA348oo0PhAMUAkB1LBCaarTBfy9LkGD

## Titanic Dataset Analysis
"""

import numpy as np
import pandas  as pd
import matplotlib.pyplot as plt
import seaborn as sns

## read data
## data prepocessing
## check null      ---> replace / drop
## check duplicate ---> drop duplicates
## check outlier
## EDA 3_5 question

"""### read data"""

df =pd.read_csv("/content/train.csv")

df.head(10)

df.describe()

df.describe(include='O')

"""### check null"""

print (df.isnull().sum())
print ((df.isnull().mean())*100)

## categoriacal fill with --->mode  \ mode for each supcategore
## numerical fill with ---> mean \ median effect on data distrupution

"""###  check duplicate"""

df.duplicated().sum()

df.drop('Cabin',axis=1,inplace=True)

df.isnull().sum()

"""### check Outlier"""

## useing visulization
columns = ['PassengerId', 'Survived', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare']
plt.figure(figsize=(12, 10))  # Adjust figure size if needed

for i, column in enumerate(columns):
    plt.subplot(3, 3, i + 1)  # Create subplots (3 rows, 3 columns)
    sns.boxplot(data=df, y=column)  # Create boxplot for current column
    plt.title(column)  # Set title for each subplot

plt.tight_layout()  # Adjust subplot spacing
plt.show()  # Display the plot

##  numerical method
columns = [ 'Fare']
for i, column in enumerate(columns):
  Q1 = df[column].quantile(0.25)  # Remove the trailing space from 'Fare '
  Q3 = df[column].quantile(0.75)  # Remove the trailing space from 'Fare '
  IQR = Q3 - Q1
  lower_bound = Q1 - 1.5 * IQR
  upper_bound = Q3 + 1.5 * IQR
  outerlierss = df[(df[column] <= lower_bound) & (df[column] >= upper_bound)]  # Remove the trailing space from 'Fare '
  len(outerlierss)
  df = df[(df[column] >= lower_bound) & (df[column] <= upper_bound)]  # Remove the trailing space from 'Fare '
  print(f"{column}\n lower_bound: {lower_bound}\n upper_bound: {upper_bound}")

"""### data"""

## check column data type
##what float col can be changed to int
##Make that column type is correct

df.info()

## astype

#apply function
def categore(age) :
  if age<= 5 :
    return 'child'
  elif age<= 15 :
    return 'teen'
  elif age<= 25 :
    return 'young'
  elif age<= 40 :
    return 'middle'
  elif age>40 :
    return 'old'
df['age_group']=df['Age'].apply(categore)

df.head()

def changetoed (Fare):
  return Fare*50

df['Fare_in_ed']=df['Fare'].apply(changetoed)

df['Fare_in_ed'] = df['Fare'].map(lambda Fare: Fare * 10)

df.head(2)

df.value_counts('Survived')

columns = [ 'Age']
plt.figure(figsize=(12, 10))  # Adjust figure size if needed

for i, column in enumerate(columns):
  Q1 = df[column].quantile(0.25)  # Remove the trailing space from 'Fare '
  Q3 = df[column].quantile(0.75)  # Remove the trailing space from 'Fare '
  IQR = Q3 - Q1
  lower_bound = Q1 - 1.5 * IQR
  upper_bound = Q3 + 1.5 * IQR
  outerlierss = df[(df[column] <= lower_bound) & (df[column] >= upper_bound)]  # Remove the trailing space from 'Fare '
  len(outerlierss)
  df = df[(df[column] >= lower_bound) & (df[column] <= upper_bound)]  # Remove the trailing space from 'Fare '
  print(f"{column}\n lower_bound: {lower_bound}\n upper_bound: {upper_bound}")

columns = ['PassengerId', 'Survived', 'Pclass', 'Age', 'SibSp', 'Parch', 'Fare']
plt.figure(figsize=(12, 10))  # Adjust figure size if needed

for i, column in enumerate(columns):
    plt.subplot(3, 3, i + 1)  # Create subplots (3 rows, 3 columns)
    sns.boxplot(data=df, y=column)  # Create boxplot for current column
    plt.title(column)  # Set title for each subplot

plt.tight_layout()  # Adjust subplot spacing
plt.show()  # Display the plot

df.describe()

numdata=df.select_dtypes(include='number')

sns.heatmap(numdata.corr(),annot=True)

df.info

